
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Scanner;
import java.time.LocalDateTime;

public class FileServer {
	
	static HashMap<String,String> fileMap = new HashMap<String,String>();
	 static SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");

	 static {
		 try
	        {
	            FileInputStream fis = new FileInputStream("myfile");
	            ObjectInputStream ois = new ObjectInputStream(fis);
	            fileNamed = (ArrayList) ois.readObject();
	            ois.close();
	            fis.close();
	            return fileNamed;
	         }catch(IOException ioe){
	             ioe.printStackTrace();
	          }catch(ClassNotFoundException c){
	             System.out.println("Class not found");
	             c.printStackTrace();
	          }
		 
	 }
	private static void createFile(String folderPath, String newFileName) throws IOException {
		if(!fileMap.containsKey(newFileName)){
		File newFile= new File(folderPath+"\\" + newFileName);
		if(newFile.createNewFile()) {
			 fileMap.put(newFile.getName(), sdf.format(newFile.lastModified()));
		}
		}
	else {
		System.out.println("Not Lucky enough file exits already");
	}
	}
	
	

	static void checkName() {
		fileNames=deserializing();
		String fileName="Abc.tt";
		if(fileNames.contains(fileName)) {
			System.out.println("File Already Present");
		}
		else {
			System.out.println("File Not Present Added To list");
			fileNames.add(fileName);		
			serializing();

		}
		   for(String tmp: fileNames){
	            System.out.println(tmp);
	        }

		}
		static void serializing() {
		       try{
		           FileOutputStream fos= new FileOutputStream("myfile");
		           ObjectOutputStream oos= new ObjectOutputStream(fos);
		           oos.writeObject(fileNames);
		           oos.close();
		           fos.close();
		         }catch(IOException ioe){
		              ioe.printStackTrace();
		          }
	}
		static ArrayList<String> deserializing() {
			ArrayList<String> fileNamed= new ArrayList<String>();
			  try
		        {
		            FileInputStream fis = new FileInputStream("myfile");
		            ObjectInputStream ois = new ObjectInputStream(fis);
		            fileNamed = (ArrayList) ois.readObject();
		            ois.close();
		            fis.close();
		            return fileNamed;
		         }catch(IOException ioe){
		             ioe.printStackTrace();
		          }catch(ClassNotFoundException c){
		             System.out.println("Class not found");
		             c.printStackTrace();
		          }
		     
			return null;
				
		}

}

