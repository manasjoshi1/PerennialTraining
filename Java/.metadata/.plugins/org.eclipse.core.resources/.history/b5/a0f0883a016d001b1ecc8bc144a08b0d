

	import java.util.HashMap;
	import java.util.Map;

	import javax.xml.parsers.DocumentBuilder;
	import javax.xml.parsers.DocumentBuilderFactory;

	import org.w3c.dom.Document;
	import org.w3c.dom.Element;
	import org.w3c.dom.NamedNodeMap;
	import org.w3c.dom.Node;
	import org.w3c.dom.NodeList;

	public class exceptionhandle2 {

		
		public void handleException(String projectName, String moduleName, Exception ex) {
			try {
				DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
				DocumentBuilder  builder = factory.newDocumentBuilder();
				Document document = builder.parse("C:/Users/Anup/eclipse-workspace/PerennialBank/src/ExceptionHandle.xml");
				
				Element rootelement = document.getDocumentElement();
				System.out.println(projectName);
				
				NodeList moduleNodes = rootelement.getChildNodes();
				
				for(int i=0 ; i<moduleNodes.getLength() ; i++) 
				{
					Node moduleNode = moduleNodes.item(i);
					if(moduleNode.getNodeType() == Node.ELEMENT_NODE) 
					{
						System.out.println("\nModule Name is: " + ((Element)moduleNode).getAttribute("name"));
						NodeList exceptionNodes = moduleNode.getChildNodes();
						//under module
						for(int j=0 ; j<exceptionNodes.getLength() ; j++) 
						{
							Node exceptionNode = exceptionNodes.item(j);
							//checking module
							if(exceptionNode.getNodeType() == Node.ELEMENT_NODE) 
							{
								String exceptionName = ((Element)exceptionNode).getNodeName();
								//System.out.println(exceptionName);
								//checking Exception
								if(exceptionName.equals(ex.getClass().getSimpleName())) 
								{
									//At Actions
									NodeList actionsNode = exceptionNode.getChildNodes();
									Node actionNode = actionsNode.item(1);								
									if(actionNode.getNodeType() == Node.ELEMENT_NODE) 
									{
										NodeList actionNodes = actionNode.getChildNodes();
										//under Actions
										for(int k=0 ; k<actionNodes.getLength() ; k++) 
										{
											Node actionN = actionNodes.item(k);
											if(actionN.getNodeType() == Node.ELEMENT_NODE)
											{											
												Map<String, String> nvPair = new HashMap<>();
												
												Element actionElement = (Element) actionN;
												NamedNodeMap actionAttribute = actionElement.getAttributes();
												
												for (int m = 0; m < actionAttribute.getLength(); ++m)
												{
												    Node attr = actionAttribute.item(m);
												    nvPair.put(attr.getNodeName(), attr.getNodeValue());
												}
												//System.out.println(nvPair);
												if(nvPair.get("name").equals("email")) {
													EmailAction a=new EmailAction();
													 a.takeAction(map);
												}
												if(nvPair.get("name").equals("log")) {
													con = new Context(new LogAction());
													con.handleException(nvPair);
												}
												if(nvPair.get("name").equals("abort")) {
													con = new Context(new AbortAction());
													con.handleException(nvPair);
												}
												if(nvPair.get("name").equals("shutdown")) {
													System.out.println("Shutdown.....");
												}
											}
										}
									}									
								}
							}
						}
						
					}
				}
			}
			catch(Throwable t) {
				t.printStackTrace();
			}
		}
	}


